{"remainingRequest":"/home/assita/dashbord-igp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/assita/dashbord-igp/src/views/home.vue?vue&type=template&id=7eb2bc79&","dependencies":[{"path":"/home/assita/dashbord-igp/src/views/home.vue","mtime":1641293788000},{"path":"/home/assita/dashbord-igp/node_modules/cache-loader/dist/cjs.js","mtime":1642074364992},{"path":"/home/assita/dashbord-igp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1642074366344},{"path":"/home/assita/dashbord-igp/node_modules/cache-loader/dist/cjs.js","mtime":1642074364992},{"path":"/home/assita/dashbord-igp/node_modules/vue-loader/lib/index.js","mtime":1642074365976}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}