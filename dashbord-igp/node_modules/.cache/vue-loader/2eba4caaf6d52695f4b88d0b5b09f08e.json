{"remainingRequest":"/home/assita/dashbord-igp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/assita/dashbord-igp/src/views/logistique/gestion/show.vue?vue&type=template&id=05a09f2a&","dependencies":[{"path":"/home/assita/dashbord-igp/src/views/logistique/gestion/show.vue","mtime":1642094460994},{"path":"/home/assita/dashbord-igp/node_modules/cache-loader/dist/cjs.js","mtime":1642074364992},{"path":"/home/assita/dashbord-igp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1642074366344},{"path":"/home/assita/dashbord-igp/node_modules/cache-loader/dist/cjs.js","mtime":1642074364992},{"path":"/home/assita/dashbord-igp/node_modules/vue-loader/lib/index.js","mtime":1642074365976}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}